{"id": "QUESIoxOWfLpMxQUpT3x", "type": "multiple-choice", "question": "이진 검색 알고리즘은 목록에서 대상 값을 어떻게 찾습니까?\na) 목록의 첫 번째 요소로 시작하여 목표 값을 찾을 때까지 모든 항목을 순차적으로 확인합니다. <br>\nb) 목표 값을 찾기 위해 목록에서 무작위로 요소를 선택합니다. <br>\nc) 목록을 반으로 나누고 중간 요소를 대상 값과 비교 한 다음 대상이 위치 해야하는 절반에서 검색을 계속합니다 (** 존재하는 경우) <br>\nd) 해싱 함수를 사용하여 대상 값을 목록의 인덱스에 매핑하고 해당 인덱스의 값에 대해 **를 직접 검색합니다.", "question_eng": "How does the binary search algorithm find the target value in a list?\nA) It starts with the first element of the list and checks every item sequentially until it finds the target value.<br>\nB) It selects elements randomly from the list to find the target value.<br> \nC) It divides the list in half and compares the middle element with the target value, then continues the the search in the half where target should be located (**if** it exists).<br>\nD) It uses a hashing function to map the target value to an index in the list, and directly searches **for** the value at that index.", "answer": "C", "answer_eng": "C"}
{"id": "QUESEUgJhro2ighviDr3", "type": "multiple-choice", "question": "대상 값이 정렬 된 배열에 있지 않을 때 이진 검색에서 어떻게됩니까?\na) 검색은 무한 루프로 떨어집니다. <br>\nb) 검색은 대상에 가장 가까운 값을 반환합니다. <br>\nc) 검색은 대상을 찾을 수 없음을 나타내는 값을 반환합니다. <br>\nd) 검색은 런타임 오류를 일으킨다.", "question_eng": "What happens in binary search when the target value is not in the sorted array?\nA) The search falls into an infinite loop.<br>\nB) The search returns the value closest to the target.<br>\nC) The search returns a value indicating that the target was not found.<br> \nD) The search causes a runtime error.", "answer": "C", "answer_eng": "C"}
{"id": "QUESXDODgo0lYzyLtf4a", "type": "multiple-choice", "question": "이진 검색 알고리즘은 데이터 세트를 짝수 요소로 어떻게 처리합니까? <br>\na) 항상 왼쪽 중간 요소를 다음 피벗으로 선택합니다. <br>\nb) 항상 올바른 중간 요소를 다음 피벗으로 선택합니다. <br>\nc) 구현에 따라 왼쪽 또는 오른쪽 중간 요소를 선택합니다. <br>\nd) 크기의 데이터 세트를 처리 할 수 ​​없습니다.", "question_eng": "How does the binary search algorithm handle datasets with an even number of elements?<br>\nA) It always selects the left middle element as the next pivot.<br>\nB) It always selects the right middle element as the next pivot.<br>\nC) It chooses either the left or right middle element depending on the implementation.<br>\nD) It cannot handle datasets of even size.", "answer": "C", "answer_eng": "C"}
{"id": "QUESB0awfLiLoUUKFjlf", "type": "multiple-choice", "question": "이진 검색의 일부인 다음 코드에서 검색중인 값이 중간 값보다 작을 때 수행 된 작업을 나타내려면 빈 공백에 무엇이 채워져야합니까? <br>\n```\nif arr[mid] > x:\n    right = ___\n```\nA) mid - 1<br>\nB) mid + 1<br>\nC) left - 1<br>\nD) right - 1", "question_eng": "In the following code, which is part of a binary search, what should be filled in the blank to represent the operation performed when the value being searched for is less than the middle value? <br>\n```\nif arr[mid] > x:\n    right = ___\n```\nA) mid - 1<br>\nB) mid + 1<br>\nC) left - 1<br>\nD) right - 1", "answer": "A", "answer_eng": "A"}
{"id": "QUES4qz5WLWchGldTl7D", "type": "multiple-choice", "question": "다음 파이썬 코드에서 이진 검색을 위해 ____을 무엇으로 대체해야합니까?\n```\ndef binary_search(arr, x): \n    low = 0\n    high = len(arr) - 1 mid = 0\n    while low <= high:\n        mid = (high + low) // 2\n        ___ \n        else:\n            return mid \n    return -1\n```\nA)\n```\nif arr[mid] < x:\n    low = mid + 1 \nelif arr[mid] > x:\n    high = mid - 1 \n```\nB)\n```\nif arr[mid] <= x: \n    low = mid + 1\nelif arr[mid] > x: \n    high = mid - 1\n```\nC)\n```\nif arr[mid] < x:\n    low = mid\nelif arr[mid] > x:\n    high = mid \n```\nD)\n```\nif arr[mid] > x: \n    low = mid + 1\nelif arr[mid] < x: \n    high = mid - 1\n```", "question_eng": "In the following Python code, what should replace ____ for the binary search?\n```\ndef binary_search(arr, x): \n    low = 0\n    high = len(arr) - 1 mid = 0\n    while low <= high:\n        mid = (high + low) // 2\n        ___ \n        else:\n            return mid \n    return -1\n```\nA)\n```\nif arr[mid] < x:\n    low = mid + 1 \nelif arr[mid] > x:\n    high = mid - 1 \n```\nB)\n```\nif arr[mid] <= x: \n    low = mid + 1\nelif arr[mid] > x: \n    high = mid - 1\n```\nC)\n```\nif arr[mid] < x:\n    low = mid\nelif arr[mid] > x:\n    high = mid \n```\nD)\n```\nif arr[mid] > x: \n    low = mid + 1\nelif arr[mid] < x: \n    high = mid - 1\n```", "answer": "A", "answer_eng": "A"}
{"id": "QUESipuPruunculfDA9H", "type": "multiple-choice", "question": "파이썬에서 이진 검색을 재귀 적으로 구현하려면 먼저 어떤 조건을 확인해야합니까? 을 작성\n아래 공란. <br>\nA) start < end<br>\nB) start <= end<br>\nC) start === end<br>\nD) start > end", "question_eng": "In Python, to implement binary search recursively, what condition should be checked first? Fill in the blank below.<br>\nA) start < end<br>\nB) start <= end<br>\nC) start === end<br>\nD) start > end", "answer": "B", "answer_eng": "B"}